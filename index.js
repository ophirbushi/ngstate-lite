"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Subject_1 = require("rxjs/Subject");
const BehaviorSubject_1 = require("rxjs/BehaviorSubject");
require("rxjs/add/operator/filter");
require("rxjs/add/operator/map");
require("rxjs/add/operator/distinctUntilChanged");
class Reducer {
    constructor(reduce) {
        this.reduce = reduce;
    }
    is(name, action, payload) {
        return action === name;
    }
}
class Effects {
    constructor() {
        this.actionDispatched = new Subject_1.Subject();
    }
    actionOfType(action) {
        return this.actionDispatched
            .filter(couple => couple.action === action)
            .map(couple => couple.payload);
    }
}
class Store extends BehaviorSubject_1.BehaviorSubject {
    constructor(initialValue, reducer, effects) {
        super(initialValue);
        this.reducer = reducer;
        this.effects = effects;
        if (this.effects)
            this.effects.dispatch = this.dispatch.bind(this);
    }
    dispatch(action, payload) {
        this.next(this.reducer.reduce(this.value, action, payload));
        if (this.effects) {
            this.effects.actionDispatched.next({ action, payload });
        }
    }
    select(keyOrMapFn) {
        const mapFn = typeof keyOrMapFn === 'string' ? value => value[keyOrMapFn] : keyOrMapFn;
        return this.asObservable()
            .map(mapFn)
            .distinctUntilChanged();
    }
}
const SET_NAME = 'setName';
const SET_SIZE = 'setSize';
const DELETE_NAME = 'deleteName';
const SHORTEN_NAME = 'shortenName';
const reducer = new Reducer(function (state, action, payload) {
    if (this.is(SET_NAME, action, payload)) {
        return Object.assign({}, state, { name: payload });
    }
    if (this.is(DELETE_NAME, action)) {
        return Object.assign({}, state, { name: null });
    }
    if (this.is(SHORTEN_NAME, action, payload)) {
        return Object.assign({}, state, { name: state.name.substring(0, state.name.length - payload) });
    }
    if (this.is(SET_SIZE, action, payload)) {
        return Object.assign({}, state, { size: payload });
    }
    return state;
});
const effects = new Effects();
effects.actionOfType(SET_NAME)
    .subscribe((payload) => {
    effects.dispatch(SHORTEN_NAME, 1);
});
effects.actionOfType(SET_SIZE)
    .subscribe((payload) => {
    effects.dispatch(SET_NAME, 'now we are ' + payload);
});
const store = new Store({ name: null, size: null }, reducer, effects);
//store.subscribe(console.log)
const size$ = store.select('size');
size$.subscribe(console.log);
store.dispatch(SET_NAME, 'Marketplace');
store.dispatch(SET_SIZE, 'big');
store.dispatch(SHORTEN_NAME, 3);
store.dispatch(DELETE_NAME);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUF1QztBQUN2QywwREFBdUQ7QUFDdkQsb0NBQWtDO0FBQ2xDLGlDQUErQjtBQUMvQixrREFBZ0Q7QUFHaEQ7SUFDSSxZQUFtQixNQUFrRjtRQUFsRixXQUFNLEdBQU4sTUFBTSxDQUE0RTtJQUFJLENBQUM7SUFFbkcsRUFBRSxDQUFvQixJQUFPLEVBQUUsTUFBZSxFQUFFLE9BQW9CO1FBQ3ZFLE1BQU0sQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDO0lBQzNCLENBQUM7Q0FDSjtBQUVEO0lBQUE7UUFDSSxxQkFBZ0IsR0FBc0QsSUFBSSxpQkFBTyxFQUFFLENBQUM7SUFTeEYsQ0FBQztJQUxHLFlBQVksQ0FBb0IsTUFBUztRQUNyQyxNQUFNLENBQUMsSUFBSSxDQUFDLGdCQUFnQjthQUN2QixNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxLQUFLLE1BQU0sQ0FBQzthQUMxQyxHQUFHLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBTSxNQUFNLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDNUMsQ0FBQztDQUNKO0FBRUQsV0FBa0IsU0FBUSxpQ0FBa0I7SUFFeEMsWUFDSSxZQUFlLEVBQ1AsT0FBc0IsRUFDdEIsT0FBdUI7UUFFL0IsS0FBSyxDQUFDLFlBQVksQ0FBQyxDQUFDO1FBSFosWUFBTyxHQUFQLE9BQU8sQ0FBZTtRQUN0QixZQUFPLEdBQVAsT0FBTyxDQUFnQjtRQUcvQixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdkUsQ0FBQztJQUVELFFBQVEsQ0FDSixNQUFrQixFQUNsQixPQUF1QjtRQUV2QixJQUFJLENBQUMsSUFB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