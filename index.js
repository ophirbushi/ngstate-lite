"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Subject_1 = require("rxjs/Subject");
const BehaviorSubject_1 = require("rxjs/BehaviorSubject");
require("rxjs/add/operator/filter");
require("rxjs/add/operator/map");
require("rxjs/add/operator/distinctUntilChanged");
class Reducer {
    constructor(reduce) {
        this.reduce = reduce;
    }
    is(name, action, payload) {
        return action === name;
    }
}
class Effects {
    constructor(registerEffects = () => { }) {
        this.registerEffects = registerEffects;
    }
    actionOfType(action) {
        return this.actions$
            .filter(couple => couple.action === action)
            .map(couple => couple.payload);
    }
}
class Store extends BehaviorSubject_1.BehaviorSubject {
    constructor(initialValue, reducer, effects) {
        super(initialValue);
        this.reducer = reducer;
        this.effects = effects;
        this.actionDispatched = new Subject_1.Subject();
        this.actions$ = this.actionDispatched.asObservable();
        if (this.effects) {
            this.effects.actions$ = this.actions$;
            this.effects.dispatch = this.dispatch.bind(this);
            this.effects.registerEffects();
        }
    }
    dispatch(action, payload) {
        this.next(this.reducer.reduce(this.value, action, payload));
        this.actionDispatched.next({ action, payload });
    }
    select(keyOrMapFn) {
        const mapFn = typeof keyOrMapFn === 'string' ? value => value[keyOrMapFn] : keyOrMapFn;
        return this.asObservable()
            .map(mapFn)
            .distinctUntilChanged();
    }
}
const SET_NAME = 'setName';
const SET_SIZE = 'setSize';
const DELETE_NAME = 'deleteName';
const SHORTEN_NAME = 'shortenName';
const reducer = new Reducer(function (state, action, payload) {
    if (this.is(SET_NAME, action, payload)) {
        return Object.assign({}, state, { name: payload });
    }
    if (this.is(DELETE_NAME, action)) {
        return Object.assign({}, state, { name: null });
    }
    if (this.is(SHORTEN_NAME, action, payload)) {
        return Object.assign({}, state, { name: state.name.substring(0, state.name.length - payload) });
    }
    if (this.is(SET_SIZE, action, payload)) {
        return Object.assign({}, state, { size: payload });
    }
    return state;
});
const effects = new Effects(function () {
    this.actionOfType(SET_NAME)
        .subscribe((payload) => {
        this.dispatch(SHORTEN_NAME, 1);
    });
    this.actionOfType(SET_SIZE)
        .subscribe((payload) => {
        this.dispatch(SET_NAME, 'now we are ' + payload);
    });
});
const store = new Store({ name: null, size: null }, reducer, effects);
store.subscribe(console.log);
store.actions$.subscribe(console.log);
const size$ = store.select('size');
size$.subscribe(console.log);
store.dispatch(SET_NAME, 'Marketplace');
store.dispatch(SET_SIZE, 'big');
store.dispatch(SHORTEN_NAME, 3);
store.dispatch(DELETE_NAME);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUF1QztBQUN2QywwREFBdUQ7QUFDdkQsb0NBQWtDO0FBQ2xDLGlDQUErQjtBQUMvQixrREFBZ0Q7QUFHaEQ7SUFDSSxZQUFtQixNQUFrRjtRQUFsRixXQUFNLEdBQU4sTUFBTSxDQUE0RTtJQUFJLENBQUM7SUFFbkcsRUFBRSxDQUFvQixJQUFPLEVBQUUsTUFBZSxFQUFFLE9BQW9CO1FBQ3ZFLE1BQU0sQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDO0lBQzNCLENBQUM7Q0FDSjtBQUVEO0lBS0ksWUFBbUIsa0JBQWlELEdBQUcsRUFBRSxHQUFHLENBQUM7UUFBMUQsb0JBQWUsR0FBZixlQUFlLENBQTJDO0lBQUksQ0FBQztJQUVsRixZQUFZLENBQW9CLE1BQVM7UUFDckMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRO2FBQ2YsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sS0FBSyxNQUFNLENBQUM7YUFDMUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQU0sTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQzVDLENBQUM7Q0FDSjtBQUVELFdBQWtCLFNBQVEsaUNBQWtCO0lBSXhDLFlBQ0ksWUFBZSxFQUNQLE9BQXNCLEVBQ3RCLE9BQXVCO1FBRS9CLEtBQUssQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUhaLFlBQU8sR0FBUCxPQUFPLENBQWU7UUFDdEIsWUFBTyxHQUFQLE9BQU8sQ0FBZ0I7UUFOM0IscUJBQWdCLEdBQUcsSUFBSSxpQkFBTyxFQUE0QyxDQUFDO1FBQ25GLGFBQVEsR0FBeUQsSUFBSSxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBRSxDQUFDO1FBUWxHLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO1lBQ2YsSUFBSSxDQUFDLE9BQU8s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