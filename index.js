"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Subject_1 = require("rxjs/Subject");
const BehaviorSubject_1 = require("rxjs/BehaviorSubject");
require("rxjs/add/operator/filter");
require("rxjs/add/operator/map");
require("rxjs/add/operator/distinctUntilChanged");
class Reducer {
    constructor(reduce) {
        this.reduce = reduce;
    }
    is(name, action, payload) {
        return action === name;
    }
}
class Effects {
    actionOfType(action) {
        return this.actions$
            .filter(couple => couple.action === action)
            .map(couple => couple.payload);
    }
}
class Store extends BehaviorSubject_1.BehaviorSubject {
    constructor(initialValue, reducer, effects) {
        super(initialValue);
        this.reducer = reducer;
        this.effects = effects;
        this.actionDispatched = new Subject_1.Subject();
        if (this.effects) {
            this.effects.actions$ = this.actionDispatched.asObservable();
            this.effects.dispatch = this.dispatch.bind(this);
        }
    }
    dispatch(action, payload) {
        this.next(this.reducer.reduce(this.value, action, payload));
        this.actionDispatched.next({ action, payload });
    }
    select(keyOrMapFn) {
        const mapFn = typeof keyOrMapFn === 'string' ? value => value[keyOrMapFn] : keyOrMapFn;
        return this.asObservable()
            .map(mapFn)
            .distinctUntilChanged();
    }
}
const SET_NAME = 'setName';
const SET_SIZE = 'setSize';
const DELETE_NAME = 'deleteName';
const SHORTEN_NAME = 'shortenName';
const reducer = new Reducer(function (state, action, payload) {
    if (this.is(SET_NAME, action, payload)) {
        return Object.assign({}, state, { name: payload });
    }
    if (this.is(DELETE_NAME, action)) {
        return Object.assign({}, state, { name: null });
    }
    if (this.is(SHORTEN_NAME, action, payload)) {
        return Object.assign({}, state, { name: state.name.substring(0, state.name.length - payload) });
    }
    if (this.is(SET_SIZE, action, payload)) {
        return Object.assign({}, state, { size: payload });
    }
    return state;
});
const effects = new Effects();
effects.actionOfType(SET_NAME)
    .subscribe((payload) => {
    effects.dispatch(SHORTEN_NAME, 1);
});
effects.actionOfType(SET_SIZE)
    .subscribe((payload) => {
    effects.dispatch(SET_NAME, 'now we are ' + payload);
});
const store = new Store({ name: null, size: null }, reducer, effects);
//store.subscribe(console.log)
const size$ = store.select('size');
size$.subscribe(console.log);
store.dispatch(SET_NAME, 'Marketplace');
store.dispatch(SET_SIZE, 'big');
store.dispatch(SHORTEN_NAME, 3);
store.dispatch(DELETE_NAME);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDBDQUF1QztBQUN2QywwREFBdUQ7QUFDdkQsb0NBQWtDO0FBQ2xDLGlDQUErQjtBQUMvQixrREFBZ0Q7QUFHaEQ7SUFDSSxZQUFtQixNQUFrRjtRQUFsRixXQUFNLEdBQU4sTUFBTSxDQUE0RTtJQUFJLENBQUM7SUFFbkcsRUFBRSxDQUFvQixJQUFPLEVBQUUsTUFBZSxFQUFFLE9BQW9CO1FBQ3ZFLE1BQU0sQ0FBQyxNQUFNLEtBQUssSUFBSSxDQUFDO0lBQzNCLENBQUM7Q0FDSjtBQUVEO0lBS0ksWUFBWSxDQUFvQixNQUFTO1FBQ3JDLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUTthQUNmLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEtBQUssTUFBTSxDQUFDO2FBQzFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFNLE1BQU0sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUM1QyxDQUFDO0NBQ0o7QUFFRCxXQUFrQixTQUFRLGlDQUFrQjtJQUd4QyxZQUNJLFlBQWUsRUFDUCxPQUFzQixFQUN0QixPQUF1QjtRQUUvQixLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7UUFIWixZQUFPLEdBQVAsT0FBTyxDQUFlO1FBQ3RCLFlBQU8sR0FBUCxPQUFPLENBQWdCO1FBTDNCLHFCQUFnQixHQUFHLElBQUksaUJBQU8sRUFBNEMsQ0FBQztRQVEvRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztZQUNmLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxZQUFZLEVBQUUsQ0FBQztZQUM3RCxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FB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